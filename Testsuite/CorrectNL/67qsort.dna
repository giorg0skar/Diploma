def main

   def qsort: n as int, a as int[]

      def qsort_auxil: lower upper as int

	 def swap: a b as ref int
	    var t is int
	 begin
	    t := a
	    a := b
	    b := t
	 end

         var x i j is int
         
      begin
         if lower < upper:
         begin
            x := a[(lower + upper) / 2]
            i := lower
            j := upper
            loop:
            begin
               if i > j:
               begin
                  break
               end
               loop:
               begin
                  if a[i] >= x:
                  begin
                     break
                  end
                  i := i+1
               end
               loop:
               begin
                  if a[j] <= x:
                  begin
                     break
                  end
                  j := j-1
               end
               if i <= j:
               begin
	          swap: a[i], a[j]
                  i := i+1
                  j := j-1
	       end
            end
	    qsort_auxil: lower, j
	    qsort_auxil: i, upper
         end
      end

   begin
      qsort_auxil: 0, n-1
   end

   def writeArray: msg as byte[], n as int, x as int[]
      var i is int
   begin
      writeString: msg
      i := 0
      loop:
      begin
         if i >= n:
         begin
            break
         end
         if i > 0:
         begin
            writeString: ", "
         end
         writeInteger: x[i]
         i := i+1
      end
      writeString: "\n"
   end

   var seed i is int
   var x is int[16]

begin
   writeString: "Seed :\t"
   seed := readInteger()
   i := 0
   loop:
   begin
      if i >= 16:
      begin
         break
      end
      seed := (seed * 137 + 220 + i) % 101
      x[i] := seed
      i := i+1
   end
   writeArray: "Initial array; ", 16, x
   qsort: 16, x
   writeArray: "Sorted array: ", 16, x
end
